AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  TableName:
    Type: String
Globals:
  Function:
    Runtime: python3.7
    Timeout: 300
    MemorySize: 128
Resources:
  LambdaFunctionAPIGateway:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      MemorySize: 128
      Role: !GetAtt LambdaFunctionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Events:
        HttpGet:
          Type: Api
          Properties:
            Path: '/test'
            Method: get
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'AmazonLambdaApiGatewayFullAccess'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        -
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        -
          PolicyName: 'AccessToDynamoDB'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            -
              Effect: Allow
              Action:
                - "dynamodb:GetItem"
                - "dynamodb:Query"
                - "dynamodb:Scan"
              Resource: "*"
        -
          PolicyName: 'AccessToCloudWatch'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            -
              Effect: Allow
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
Outputs:
  LambdaFunctionAPIGateway:
    Value: !GetAtt LambdaFunctionAPIGateway.Arn
  LambdaFunctionRole:
    Value: !GetAtt LambdaFunctionRole.Arn
